#version 330 core
  
//Vertex Attributes
layout (location = 0) in vec3 Position;
layout (location = 1) in vec2 TextureCoordinates;
layout (location = 2) in vec2 color;
layout (location = 3) in vec3 Normal;
layout (location = 4) in float triangleIndex;

//Output data
out vec2 FragTextureCoordinates;
out vec3 FragNormal;
out vec3 FragPos;
out float VertexIndex;
out float FragTriIndex;

//Uniform buffer
uniform mat4 transform;
uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;

void main()
{
	gl_Position =   projection * view * model * vec4(Position,1.0) ;
    FragTextureCoordinates = TextureCoordinates;
    FragNormal = mat3(transpose(inverse(model))) * Normal;  
	FragPos = vec3(model * vec4(Position, 1.0));
	FragTriIndex =triangleIndex;
	VertexIndex = gl_VertexID;

}